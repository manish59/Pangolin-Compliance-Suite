# Generated by Django 5.1.6 on 2025-03-01 18:36

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('environments', '0001_initial'),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestProtocol',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('deprecated', 'Deprecated'), ('draft', 'Draft'), ('archived', 'Archived')], default='active', max_length=50)),
                ('order_index', models.IntegerField(default=0, help_text='Custom ordering index for this protocol')),
            ],
            options={
                'ordering': ['order_index', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ConnectionConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_type', models.CharField(choices=[('database', 'Database'), ('api', 'API'), ('ssh', 'SSH'), ('kubernetes', 'Kubernetes'), ('aws', 'AWS'), ('azure', 'Azure')], max_length=20)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('timeout_seconds', models.IntegerField(default=30, help_text='Connection timeout in seconds')),
                ('retry_attempts', models.IntegerField(default=3, help_text='Number of retry attempts on failure')),
                ('config_data', models.JSONField(default=dict, help_text='Additional configuration parameters')),
                ('password', models.ForeignKey(blank=True, help_text='Environment variable for password', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='password_configs', to='environments.environment')),
                ('secret_key', models.ForeignKey(blank=True, help_text='Environment variable for secret key/token', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secret_key_configs', to='environments.environment')),
                ('username', models.ForeignKey(blank=True, help_text='Environment variable for username', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='username_configs', to='environments.environment')),
                ('protocol', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_config', to='test_protocols.testprotocol')),
            ],
        ),
        migrations.CreateModel(
            name='TestSuite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_suite', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='testprotocol',
            name='suite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='test_protocols.testsuite'),
        ),
        migrations.AlterUniqueTogether(
            name='testprotocol',
            unique_together={('suite', 'name')},
        ),
    ]
